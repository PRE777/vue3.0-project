// 1.定义主题
// 默认模式
$theme-default: (
  font-color: #000,
  font-size: 14px,
  background: #f9f6f6,
  // background: red,
);

// 暗夜模式
$theme-night: (
  font-color: #fff,
  font-size: 14px,
  background: rgb(102, 98, 98),
);

// 2.将定义好的主题添加到map中
$themes: (
  default: $theme-default,
  night: $theme-night,
);
//3.定义混合指令，切换主题，将主题中到所有规则添加到 theme-map 中
@mixin themify($themes: $themes) {
  @each $theme-name, $map in $themes {
    // & 表示父级元素
    // !global 把局部变量强升为全局变量
    // $theme-name 主题样式类名， $theme-map样式
    .theme-#{$theme-name} & {
      $theme-map: () !global;
      // 循环合并键值对
      @each $key, $value in $map {
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      // 表示包含 下面函数 themed()
      @content;
      $theme-map: null !global;
    }
  }
}
// 4. 调用混合指令themify(),定义规则，此处到规则会替换@content
@mixin mytheme {
  @include themify($themes) {
    color: themed("font-color");
    font-size: themed("font-size");
    background: themed("background");
  }
}

// 通过key获取map中的值
@function themed($key) {
  @return map-get($theme-map, $key);
}
